AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation for VPC'

Resources: 
# My VPC(name of the VPC created)
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '172.16.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

# Public subnet in 1st AZ for MyVPC 
  PublicSubnet1AZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1AZ

# App private subnet in 1st AZ for MyVPC
  AppPrivateSubnet1AZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.2.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: AppPrivateSubnet1AZ

# Database private subnet in 1st AZ for MyVPC
  DataPrivateSubnet1AZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.3.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: DataPrivateSubnet1AZ 
         
# Public subnet in 2nd AZ for MyVPC
  PublicSubnet2AZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.4.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2AZ

# App private subnet in 2nd AZ for MyVPC
  AppPrivateSubnet2AZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.5.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: AppPrivateSubnet2AZ

 # Database private subnet in 2nd AZ for MyVPC
  DataPrivateSubnet2AZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.6.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: DataPrivateSubnet2AZ    

 # Internet Gateway IGW  
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway' 
    Properties:
      Tags:
        - Key: Name
          Value: MyVPC-IGW       

# Attach Gateway
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway  

# Route Table
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: PublicRouteTable

# Public Route
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

# Public Subnet Association
  PublicSubnet1AZRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1AZ
      RouteTableId: !Ref PublicRouteTable

# Bastion Host EC2
  BastionHost:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: bastion
      ImageId: ami-008c09a18ce321b3c
      SubnetId: !Ref PublicSubnet1AZ
      SecurityGroupIds:
        - !Ref BastionSG
      Tags:
        - Key: Name
          Value: BastionHost       

# Bastion Security Group
  BastionSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable SSH access'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 219.75.48.32/32   

# AppInstance1AZ
  AppInstance1AZ:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: bastion
      ImageId: ami-008c09a18ce321b3c
      SubnetId: !Ref AppPrivateSubnet1AZ
      SecurityGroupIds:
        - !Ref AppInstance1AZSG
      Tags:
        - Key: Name
          Value: App1AZ

# AppInstance2AZ
  AppInstance2AZ:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: bastion
      ImageId: ami-008c09a18ce321b3c
      SubnetId: !Ref AppPrivateSubnet2AZ
      SecurityGroupIds:
        - !Ref AppInstance2AZSG
      Tags:
        - Key: Name
          Value: App2AZ  

# SG App1AZ
  AppInstance1AZSG:
   Type: 'AWS::EC2::SecurityGroup'
   Properties:
    GroupDescription: 'Allow SSH from Bastion host in public subnet'
    VpcId: !Ref MyVPC
    SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !Ref BastionSG

# SG App2AZ
  AppInstance2AZSG:
   Type: 'AWS::EC2::SecurityGroup'
   Properties:
    GroupDescription: 'Allow ICMP Ping from App1AZ'
    VpcId: !Ref MyVPC
    SecurityGroupIngress:
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        SourceSecurityGroupId: !Ref AppInstance1AZSG



